{"ast":null,"code":"import { HttpHeaders } from \"@angular/common/http\";\nimport { catchError, throwError } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ListbookService {\n  constructor(http) {\n    this.http = http;\n    this.urlEndpoint = \"http://localhost:8080/api/Books/\";\n    this.httpHeaders = new HttpHeaders({\n      'Content-Type': 'application/json'\n    });\n  }\n  getAllBooks() {\n    return this.http.get(this.urlEndpoint).pipe(catchError(e => {\n      window.alert(`Error:${e.status}, ${e.error}`);\n      return throwError(() => e);\n    }));\n  }\n  delete(id) {\n    return this.http.delete(`${this.urlEndpoint}${id}`).pipe(catchError(e => {\n      window.alert(`Error:${e.status}, ${e.error}`);\n      return throwError(() => e);\n    }));\n  }\n  edit(book) {\n    return this.http.put(`${this.urlEndpoint}${book.id}`, book).pipe(catchError(e => {\n      window.alert(`Error:${e.status}, ${e.error}`);\n      return throwError(() => e);\n    }));\n  }\n  create(book) {\n    return this.http.post(`${this.urlEndpoint}`, book).pipe(catchError(e => {\n      window.alert(`Error:${e.status}, ${e.error}`);\n      return throwError(() => e);\n    }));\n  }\n  getOne(id) {\n    return this.http;\n  }\n}\nListbookService.ɵfac = function ListbookService_Factory(t) {\n  return new (t || ListbookService)(i0.ɵɵinject(i1.HttpClient));\n};\nListbookService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ListbookService,\n  factory: ListbookService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAoBA,WAAW,QAAO,sBAAsB;AAC5D,SAAQC,UAAU,EAAcC,UAAU,QAAO,MAAM;;;AAMvD,OAAM,MAAOC,eAAe;EAK1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,gBAAW,GAAW,kCAAkC;IACxD,gBAAW,GAAG,IAAIL,WAAW,CAAC;MAAC,cAAc,EAAG;IAAkB,CAAC,CAAC;EAEpC;EAEjCM,WAAW;IAChB,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAS,IAAI,CAACC,WAAW,CAAC,CAACC,IAAI,CACjDR,UAAU,CAACS,CAAC,IAAG;MACbC,MAAM,CAACC,KAAK,CAAC,SAASF,CAAC,CAACG,MAAM,KAAKH,CAAC,CAACI,KAAK,EAAE,CAAC;MAC7C,OAAOZ,UAAU,CAAC,MAAMQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CAAC;EACP;EAEOK,MAAM,CAACC,EAAS;IACrB,OAAO,IAAI,CAACX,IAAI,CAACU,MAAM,CAAO,GAAG,IAAI,CAACP,WAAW,GAAGQ,EAAE,EAAE,CAAC,CAACP,IAAI,CAC5DR,UAAU,CAACS,CAAC,IAAG;MACbC,MAAM,CAACC,KAAK,CAAC,SAASF,CAAC,CAACG,MAAM,KAAKH,CAAC,CAACI,KAAK,EAAE,CAAC;MAC7C,OAAOZ,UAAU,CAAC,MAAMQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH;EACH;EAEOO,IAAI,CAACC,IAAU;IACpB,OAAO,IAAI,CAACb,IAAI,CAACc,GAAG,CAAO,GAAG,IAAI,CAACX,WAAW,GAAGU,IAAI,CAACF,EAAE,EAAE,EAACE,IAAI,CAAC,CAACT,IAAI,CACnER,UAAU,CAACS,CAAC,IAAG;MACbC,MAAM,CAACC,KAAK,CAAC,SAASF,CAAC,CAACG,MAAM,KAAKH,CAAC,CAACI,KAAK,EAAE,CAAC;MAC7C,OAAOZ,UAAU,CAAC,MAAMQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH;EACH;EAEOU,MAAM,CAACF,IAAU;IACtB,OAAO,IAAI,CAACb,IAAI,CAACgB,IAAI,CAAO,GAAG,IAAI,CAACb,WAAW,EAAE,EAAEU,IAAI,CAAC,CAACT,IAAI,CAC3DR,UAAU,CAACS,CAAC,IAAG;MACbC,MAAM,CAACC,KAAK,CAAC,SAASF,CAAC,CAACG,MAAM,KAAKH,CAAC,CAACI,KAAK,EAAE,CAAC;MAC7C,OAAOZ,UAAU,CAAC,MAAMQ,CAAC,CAAC;IAC5B,CAAC,CAAC,CACH;EACH;EAEOY,MAAM,CAACN,EAAU;IACtB,OAAO,IAAI,CAACX,IAAI;EAClB;;AA5CWF,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;SAAfA,eAAe;EAAAoB,SAAfpB,eAAe;EAAAqB,YAFd;AAAM","names":["HttpHeaders","catchError","throwError","ListbookService","constructor","http","getAllBooks","get","urlEndpoint","pipe","e","window","alert","status","error","delete","id","edit","book","put","create","post","getOne","factory","providedIn"],"sourceRoot":"","sources":["/mnt/Projects/github/Books-mock-api/frontend/src/app/components/list-books/listbook.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\nimport {catchError, Observable, throwError} from \"rxjs\";\nimport Book from \"../models/Book\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListbookService {\n\n  private urlEndpoint: string = \"http://localhost:8080/api/Books/\";\n  private httpHeaders = new HttpHeaders({'Content-Type' : 'application/json'});\n\n  constructor(private http: HttpClient) { }\n\n  public getAllBooks():Observable<Book[]> {\n    return this.http.get<Book[]>(this.urlEndpoint).pipe(\n      catchError(e => {\n        window.alert(`Error:${e.status}, ${e.error}`);\n        return throwError(() => e);\n      }));\n  }\n\n  public delete(id:number): Observable<Book> {\n    return this.http.delete<Book>(`${this.urlEndpoint}${id}`).pipe(\n      catchError(e => {\n        window.alert(`Error:${e.status}, ${e.error}`);\n        return throwError(() => e);\n      })\n    );\n  }\n\n  public edit(book: Book): Observable<Book> {\n    return this.http.put<Book>(`${this.urlEndpoint}${book.id}`,book).pipe(\n      catchError(e => {\n        window.alert(`Error:${e.status}, ${e.error}`);\n        return throwError(() => e);\n      })\n    );\n  }\n\n  public create(book: Book): Observable<Book> {\n    return this.http.post<Book>(`${this.urlEndpoint}`, book).pipe(\n      catchError(e => {\n        window.alert(`Error:${e.status}, ${e.error}`);\n        return throwError(() => e);\n      })\n    );\n  }\n\n  public getOne(id: number): Observable<Book>{\n    return this.http\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}